include:
  - ../specs/petclinic/docker-compose-include.yml  #with serviceB declared
  - ../specs/snippets/docker-compose.yml  #with serviceB declared
  - ../specs/test-report/docker-compose.yml  #with serviceB declared

services:
  config-server:
    image: springcommunity/spring-petclinic-config-server
    container_name: config-server
    volumes:
      - "./config:/config"
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - GIT_REPO=/config
      - SPRING_PROFILES_ACTIVE=docker,native
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://config-server:8888" ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "8888:8888"

  discovery-server:
    image: springcommunity/spring-petclinic-discovery-server
    container_name: discovery-server
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://discovery-server:8761" ]
      interval: 5s
      timeout: 3s
      retries: 10
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "8761:8761"

  customers-service:
    image: springcommunity/spring-petclinic-customers-service
    container_name: customers-service
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - SPRING_PROFILES_ACTIVE=docker,mysql
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    ports:
      - "8081:8081"

  visits-service:
    image: springcommunity/spring-petclinic-visits-service
    container_name: visits-service
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - SPRING_PROFILES_ACTIVE=docker,mysql
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    ports:
      - "8082:8082"

  vets-service:
    image: springcommunity/spring-petclinic-vets-service
    container_name: vets-service
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - SPRING_PROFILES_ACTIVE=docker,mysql
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
    ports:
      - "8083:8083"

  api-gateway:
    image: springcommunity/spring-petclinic-api-gateway
    container_name: api-gateway
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    ports:
      - "8080:8080"

  tracing-server:
    image: openzipkin/zipkin
    container_name: tracing-server
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
      - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -Djava.security.egd=file:/dev/./urandom
    ports:
      - "9411:9411"

  admin-server:
    image: springcommunity/spring-petclinic-admin-server
    container_name: admin-server
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    ports:
      - "9090:9090"

  mysql:
    image: mysql:5.7.44
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: petclinic
      MYSQL_DATABASE: petclinic
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 5s
      timeout: 5s
      retries: 55
    ports:
      - "3306:3306"

  testdata:
    container_name: testdata
    build:
      context: ../testdata
      dockerfile: Dockerfile
    environment:
      db_url: "jdbc:mysql://mysql:3306/petclinic"
      db_username: root
      db_password: petclinic
      db_driver: com.mysql.cj.jdbc.Driver
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8085:8080"

